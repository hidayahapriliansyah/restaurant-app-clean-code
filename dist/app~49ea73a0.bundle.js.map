{"version":3,"file":"app~49ea73a0.bundle.js","mappings":";m0EAAMA,EAAa,ogBAShB,SATgB,qCACjB,WACEC,KAAKC,QACP,GAAC,oBAED,WACED,KAAKE,UAAY,4CAGnB,0EAAC,EATgB,CAShB,EATyBC,cAY5BC,eAAeC,OAAO,iBAAkBN,yTCXxC,gnGAAAO,GAAA,wBAAAA,EAAA,sBAAAA,GAAA,iBAAAA,GAAA,ssDAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,4bAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,yhBAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,qGAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,kkBAEA,IAAQC,EAA8CC,EAAAA,EAAAA,SAApCC,EAAoCD,EAAAA,EAAAA,YAAvBE,EAAuBF,EAAAA,EAAAA,mBAEhDG,GAAYC,EAAAA,EAAAA,IAAOL,EAAUE,EAAa,CAC9CI,QAAO,SAACC,GACNA,EAASC,kBAAkBL,EAAoB,CAAEM,QAAS,MAC5D,IA0BF,QAvB8B,CACtBC,cAAa,SAACC,GAAI,oGACdA,EAAE,qBACN,KAAI,sCACGP,EAAS,mBAAEQ,IAAIT,EAAoBQ,GAAE,gFAH1B,EAIxB,EAEME,iBAAgB,WAAG,iHACTT,EAAS,uCAAEU,OAAOX,IAAkB,0CAD3B,EAEzB,EAEMY,cAAa,SAACC,GAAY,oGAEtBA,EAAWC,eAAe,MAAK,qBACnC,KAAI,sCACGb,EAAS,mBAAEc,IAAIf,EAAoBa,GAAU,gFAJ1B,EAKhC,EAEMG,iBAAgB,SAACR,GAAI,iHACXP,EAAS,8CAASD,EAAoBQ,IAAE,0CAD7B,EAE3B,6DCvBF,QANqB,CACnBS,KAAM,GAAF,OAAKnB,EAAAA,EAAAA,SAAe,QAExBoB,OAAQ,SAACV,GAAE,gBAAQV,EAAAA,EAAAA,SAAe,kBAAUU,EAAE,sPCJhD,irOAsBA,QArBoB,yBADpB,4FACoB,SADpB,QAMG,EALiB,EAkBjB,OAnBH,EACoB,OADpB,EACoB,qCAClB,sGACyBW,MAAMC,EAAAA,MAAkB,OAAjC,OAARC,EAAW,EAAH,cACaA,EAASC,OAAM,OAAxB,OAAZC,EAAe,EAAH,uBACXA,EAAaC,aAAW,2CAChC,0FAED,WAA8BhB,GAAE,kGAELW,MAAMC,EAAAA,OAAoBZ,IAAI,OAAvC,OAARa,EAAW,EAAH,cACaA,EAASC,OAAM,OAAxB,GACW,0BADvBC,EAAe,EAAH,MACDE,QAAkC,sBAC3C,IAAIC,MAAM,2BAA0B,gCAErCH,EAAaV,YAAU,2HAIjC,+CAnBH,6DAmBG,EAlBiB,gDCOpB,QATe,CACbc,SAAU,uCACVC,eAAgB,6CAChB/B,SAAU,oBACVE,YAAa,EACbC,mBAAoB,sBACpB6B,WAAY,wBAAF,QAA0B,IAAIC,MAAOC,mECS3CC,sEAAM,IAAIC,EAAAA,EAAI,CAClBC,UAAWC,SAASC,cAAc,WAClCC,OAAQF,SAASC,cAAc,SAC/BE,QAASH,SAASC,cAAc,eAGlCG,OAAOC,iBAAiB,cAAc,WACpCR,EAAIS,YACN,IAEAF,OAAOC,iBAAiB,QAAQ,WAC9BR,EAAIS,cACJC,EAAAA,EAAAA,IACF","sources":["webpack://restaurant-apps/./src/scripts/components/loader-content.js","webpack://restaurant-apps/./src/scripts/data/favorite-restaurant-idb.js","webpack://restaurant-apps/./src/scripts/globals/api-endpoint.js","webpack://restaurant-apps/./src/scripts/data/restaurant-data.js","webpack://restaurant-apps/./src/scripts/globals/config.js","webpack://restaurant-apps/./src/scripts/index.js"],"sourcesContent":["class LoaderContent extends HTMLElement {\r\n  connectedCallback() {\r\n    this.render();\r\n  }\r\n\r\n  render() {\r\n    this.innerHTML = `\r\n      <span class=\"loader\"></span>\r\n    `;\r\n  }\r\n}\r\n\r\ncustomElements.define('loader-content', LoaderContent);\r\n","import { openDB } from 'idb';\r\nimport CONFIG from '../globals/config';\r\n\r\nconst { IDB_NAME, IDB_VERSION, OBJECT_STRORE_NAME } = CONFIG;\r\n\r\nconst dbPromise = openDB(IDB_NAME, IDB_VERSION, {\r\n  upgrade(database) {\r\n    database.createObjectStore(OBJECT_STRORE_NAME, { keyPath: 'id' });\r\n  },\r\n});\r\n\r\nconst FavoriteRestaurantIdb = {\r\n  async getRestaurant(id) {\r\n    return !id\r\n      ? null\r\n      : (await dbPromise).get(OBJECT_STRORE_NAME, id);\r\n  },\r\n\r\n  async getAllRestaurant() {\r\n    return (await dbPromise).getAll(OBJECT_STRORE_NAME);\r\n  },\r\n\r\n  async putRestaurant(restaurant) {\r\n    // eslint-disable-next-line no-prototype-builtins\r\n    return !restaurant.hasOwnProperty('id')\r\n      ? null\r\n      : (await dbPromise).put(OBJECT_STRORE_NAME, restaurant);\r\n  },\r\n\r\n  async deleteRestaurant(id) {\r\n    return (await dbPromise).delete(OBJECT_STRORE_NAME, id);\r\n  },\r\n};\r\n\r\nexport default FavoriteRestaurantIdb;\r\n","import CONFIG from './config';\r\n\r\nconst API_ENDPOINT = {\r\n  HOME: `${CONFIG.BASE_URL}list`,\r\n  // FAVORITE_RESTAURANT: `${CONFIG}`,\r\n  DETAIL: (id) => `${CONFIG.BASE_URL}detail/${id}`,\r\n};\r\n\r\nexport default API_ENDPOINT;\r\n","import API_ENDPOINT from '../globals/api-endpoint';\r\n\r\nclass RestaurantData {\r\n  static async listAll() {\r\n    const response = await fetch(API_ENDPOINT.HOME);\r\n    const responseJson = await response.json();\r\n    return responseJson.restaurants;\r\n  }\r\n\r\n  static async detailRestaurant(id) {\r\n    try {\r\n      const response = await fetch(API_ENDPOINT.DETAIL(id));\r\n      const responseJson = await response.json();\r\n      if (responseJson.message === 'Restaurant not found') {\r\n        throw new Error('ID restoran tidak valid');\r\n      }\r\n      return responseJson.restaurant;\r\n    } catch (error) {\r\n      return error;\r\n    }\r\n  }\r\n}\r\n\r\nexport default RestaurantData;\r\n","const CONFIG = {\r\n  BASE_URL: 'https://restaurant-api.dicoding.dev/',\r\n  BASE_IMAGE_URL: 'https://restaurant-api.dicoding.dev/images',\r\n  IDB_NAME: 'botram-restaurant',\r\n  IDB_VERSION: 1,\r\n  OBJECT_STRORE_NAME: 'favorite-restaurant',\r\n  CACHE_NAME: `BotramFindRestaurant-${new Date().toDateString()}`,\r\n};\r\n\r\nexport default CONFIG;\r\n","import App from './views/app';\r\nimport swRegister from './utils/sw-register';\r\nimport 'lazysizes';\r\nimport 'lazysizes/plugins/parent-fit/ls.parent-fit';\r\n\r\nimport './components/loader-content';\r\n\r\nimport '../styles/content.css';\r\nimport '../styles/main.css';\r\nimport '../styles/navbar.css';\r\nimport '../styles/detail.css';\r\nimport '../styles/reviews.css';\r\nimport '../styles/favorite.css';\r\nimport '../styles/loader.css';\r\n\r\nconst app = new App({\r\n  hamburger: document.querySelector('.burger'),\r\n  drawer: document.querySelector('.menu'),\r\n  content: document.querySelector('.content'),\r\n});\r\n\r\nwindow.addEventListener('hashchange', () => {\r\n  app.renderPage();\r\n});\r\n\r\nwindow.addEventListener('load', () => {\r\n  app.renderPage();\r\n  swRegister();\r\n});\r\n"],"names":["LoaderContent","this","render","innerHTML","HTMLElement","customElements","define","i","IDB_NAME","CONFIG","IDB_VERSION","OBJECT_STRORE_NAME","dbPromise","openDB","upgrade","database","createObjectStore","keyPath","getRestaurant","id","get","getAllRestaurant","getAll","putRestaurant","restaurant","hasOwnProperty","put","deleteRestaurant","HOME","DETAIL","fetch","API_ENDPOINT","response","json","responseJson","restaurants","message","Error","BASE_URL","BASE_IMAGE_URL","CACHE_NAME","Date","toDateString","app","App","hamburger","document","querySelector","drawer","content","window","addEventListener","renderPage","swRegister"],"sourceRoot":""}